3d examples doc

This is one rush job, I've got other commitments at
present so there are no groovy shapes, cool aliens
or anything, this is just to proove the development
is underway.

For those interested I included source code for the
3Dshapelib in this drawer to give you a better idea
about how things sort of work regarding movement.

Things I WILL be adding for next issue will be:

* plane pick for quick surface detail, mainly 1 bitplane
  rivers and roads on the planet surface

* homing routines like in BuzzBar2 which will allow you
  to easily set up aliens that track other aliens

* circles for cool looking spheres

Speed increases will be possible if I implement interleaved
bitplanes which we sadly left behind in the original Blitz
BASIC and look at a quadrant system that groups shapes in
groups according to their location, if you are just running
a standard 68000, knock the display down in size by making
it a window (find the initdisplay3d commands...)

notes i left out of the manual cos they may change:

*  for rotation vars 4096blitzans=360degrees

* y axis is -ve ie 0,-50,0 is above the planet surface!

* I think you actually list verticies in polygon description
  antclockwise?

* the red blue glasses routine is a bit of a cludge as the slice
  is not a dualplayfield but we use the showf and showb commands
  anyway to get the red and blue bitmaps to combine as purple...

If you have a pair of xspex the LCD shuttered glasses, a few changes
are required:

Basically we set up an interupt that displays either the top or bottom
half of the bitmap (left and right eyes) each consecutive frame. It is
a good idea if you are using pal to switch to NTSC as the faster frame
rate gives means faster switching between eyes. Because the Show command
is on the interupt we use a current_frame variable to link it with the
main loop....

BitMap 0,320,192*2,3 ;bitmaps twice as high than display for stereo
BitMap 1,320,192*2,3

Slice 0,54,320,192,$fff8,3,8,8,320,320  ;just like normal mode

SetInt 5
 If p Then p=0:yy=192 Else p=-128:yy=0   ;alternate left/right eye vars
 Poke.b $bfe201,3:j=Joyb(0)              ;read joystick
 Poke.b $bfe201,$c3:Poke.b $bfe001,p     ;then poke shutter hardware
 Show db_curr,0,yy                       ;and show correct half of bitmap
End SetInt

While Inkey$=""                          ;db_curr used by interupt
  db_curr=db:db=1-db:VWait               ;change it THEN wait for VB
  Gosub do3d
Wend

Poke.b $bfe201,3:End                     ;make sure mouse buttons will work
                                         ;when we exit

Thats all for nice, feel free to drop us a message...

Simon.
